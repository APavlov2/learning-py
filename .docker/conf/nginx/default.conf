# Redirect all HTTP to HTTPS with no-WWW
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name ~^(?:www\.)?(.*)$;
    return 301 https://$host:8443$request_uri;
}

# Redirect WWW to no-WWW
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ~^www\.(.*)$;
    return 308 $scheme://$1$request_uri;
}

server {
    # SSL certificates
    ssl_certificate /etc/ssl/certs/mycert.crt;
    ssl_certificate_key /etc/ssl/private/mycert.key;

    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name learning-py.com localhost;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/html/;

    gzip            on;
    gzip_min_length 1000;
    gzip_types      text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Serve static files if found, otherwise proxy to Sanic
    location / {
        root /static;
        try_files $uri @sanic;
    }

    # Updated proxy_pass to use internal service name 'app'
    location @sanic {
        proxy_pass http://learning-py-app:8443;  # Change 'learning-py.com' to the Docker service name
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_set_header forwarded 'by=\"_$hostname\";$for_addr;proto=$scheme;host=\"$http_host\"';
        # Allow websockets and keep-alive (avoid connection: close)
        proxy_set_header connection "upgrade";
        proxy_set_header upgrade $http_upgrade;
    }
}

# Forwarded for= client IP address formatting
map $remote_addr $for_addr {
    ~^[0-9.]+$          "for=$remote_addr";        # IPv4 client address
    ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";  # IPv6 bracketed and quoted
    default             "for=unknown";             # Unix socket
}